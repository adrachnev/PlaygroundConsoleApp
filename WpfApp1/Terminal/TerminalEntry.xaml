<UserControl x:Class="WpfApp1.TerminalEntry"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfApp1"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <Style x:Key="ImageIconOverlayStyle" TargetType="{x:Type Image}">
            <!--  Default icon source is warning, replace by error/info depending on properties  -->
            <Setter Property="Source" Value="/WpfApp1;component/Terminal/Images/Warning.png" />

            <Setter Property="Width" Value="32" />
            <Setter Property="Height" Value="32" />

            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <!-- Message is set in ModuleDetailsViewModel and SystemViewEntryViewModel -->
            <Setter Property="ToolTip" Value="{Binding Message}" />
            <!-- <Setter Property="Stretch" Value="Uniform"/> -->

            <Style.Triggers>
                <DataTrigger Binding="{Binding HasError}" Value="true">
                    <Setter Property="Source" Value="/WpfApp1;component/Terminal/Images/Error.png" />
                </DataTrigger>
                <DataTrigger Binding="{Binding HasInfo}" Value="true">
                    <Setter Property="Source" Value="/WpfApp1;component/Terminal/Images/Info.png" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>


    <AdornerDecorator >
        <StackPanel  local:SmartAdorner.AutoSize ="True" local:SmartAdorner.Visible="{Binding SignalReplaceDrop}">

            <local:SmartAdorner.Template>
                <DataTemplate>
                    <Grid>
                        <Border
                            Background="Transparent"
                            BorderBrush="{DynamicResource FestoColors.CaerulBrush}"
                            BorderThickness="2"
                            IsHitTestVisible="False"
                            Opacity="50">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect
                                                BlurRadius="11"
                                                Opacity="0"
                                                ShadowDepth="0"
                                                Color="{DynamicResource FestoColors.Caerul}" />
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetProperty="(Effect).Opacity"
                                                            To="1.0"
                                                            Duration="00:00:00" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <Canvas x:Name="Canvas">
                            <TextBox
                                Canvas.Left="{Binding ActualWidth, ElementName=Canvas}"
                                Canvas.Top="-24"
                                Background="Transparent"
                                FontWeight="SemiBold"
                                Foreground="{DynamicResource FestoColors.TextLightBrush}"
                                Text="DropToReplaceText" />
                        </Canvas>
                    </Grid>
                </DataTemplate>
            </local:SmartAdorner.Template>

            <TextBlock
                
                HorizontalAlignment="Center"
                FontSize="16"
                FontWeight="Bold"
                Text="{Binding Path=Module.Type, FallbackValue='-'}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DisplayModuleDescription}" Value="true">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <Grid ToolTip="{Binding Message}"
                   VerticalAlignment="Top">
                <!--  Grid for the CPX-Terminal-image and the info icon overlay  -->

                <ContentPresenter VerticalAlignment="Top"
                                  HorizontalAlignment="Left"
                                  x:Name="systemViewDeviceImage" Content="{Binding DeviceImage}"/>

                <Image Style="{DynamicResource ImageIconOverlayStyle}" 
                       Visibility="{Binding DisplayDiagnosis, Converter={StaticResource BooleanToVisibilityConverter}}" />

            </Grid>
        </StackPanel>
    </AdornerDecorator>
</UserControl>
